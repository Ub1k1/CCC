package com.company;
import java.util.Scanner;

public class Main {
    static byte[][] twod;
    static int[] riceballs;

    static int canComb(int i, int j){

        if (i >= j){
            return 1;
        }

        if (twod[i][j] != 0){
            return twod[i][j];
        }

        int a = i;
        int b = j;
        int leftSum = riceballs[i];
        int rightSum = riceballs[j];
        while (a < b){
            if (leftSum == rightSum){
                if (canComb(i, a) == 1 && canComb(a+1, b-1) == 1 && canComb(b, j) == 1){
                    twod[i][j] = 1;
                    return 1;
                }
                a++;
                b--;
                leftSum = leftSum + riceballs[a];
                rightSum = rightSum + riceballs[b];
            } else if (leftSum < rightSum){
                a++;
                leftSum = leftSum + riceballs[a];
            }
            else{
                b--;
                rightSum = rightSum + riceballs[b];
            }
        }

        twod[i][j] = -1;
        return -1;
    }

    public static void main(String[] args) {
        Scanner kb = new Scanner(System.in);
	    int N = Integer.parseInt(kb.nextLine());
	    twod = new byte[N][N];
	    String[] input = kb.nextLine().split(" ");
	    riceballs = new int[N];

	    for (int i = 0; i < N; i++){
            riceballs[i] = Integer.parseInt(input[i]);
        }

	    int biggest;
	    int bOfBs = -1;

	    for (int i = 0; i < N; i++){
	        biggest = -1;
	        int sum = 0;
	        for (int j = i; j < N; j++){
	            sum = sum + riceballs[j];
	            if (canComb(i, j) == 1){
	                if (sum > biggest){
	                    biggest = sum;
                    }
                }
            }
	        if (biggest > bOfBs){
	            bOfBs = biggest;
            }
        }

        System.out.println(bOfBs);
    }
}
